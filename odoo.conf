[options]


log-db = False
log-level = warn
interface = localhost
port = 8069

db_host = localhost
db_name = odoo
db_port = 5433
db_user = odoo
db_password = odoo

admin_passwd = admin
addons_path = C:\Users\Damian\PycharmProjects\ODOO13\custom_addons, C:\Users\Damian\PycharmProjects\ODOO13\addons
without_demo=WITHOUT_DEMO





#HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
# Tuning Options
#HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH
#-----------------------------------------------------------------------------
# A word on tuning your Odoo Server
#-----------------------------------------------------------------------------
#
# A lot of time has gone in to testing this TKL appliance, and one thing we
# learned while testing was tuning. For all the why we chose these numbers you
# can take a look at he issues on GitHub (links at the botton of this article)
#
# Most of this text here was taken from the Memory Matrix Discussion
# https://github.com/DocCyblade/tkl-odoo/issues/49#issuecomment-148881166
#
# It is important to note that you can run Odoo in threaded mode by setting
# the workers option to 0 however there are some modules that won't work
# and you loose fine grain control of resource management.
#
#-----------------------------------------------------------------------------
#
# the --workers is how many new process will be started to perform work or
# (answer requests) The workers have limits upon them set by the limit_xxxxx
# options here in the config file.
#
# The "limit_memory_soft" limit is the amount of ram that when a process
# goes over this limit after it is done with the request it is terminated
# and the memory it was using is freed. This amount goes for each process
#
# The hard limit is the amount of ram that if the process goes over it,
# it WILL terminate right then. (I don't think this is really correct
# because of the PDF issue we had and set this to 1.3 GB and never
# saw a process take this much. but if its below 1.3GB PDF are not created)
#
# The one we need to pay attention to is the limit_memory_soft.
# As these workers will stay alive and hold on to memory until that limit
# is reached. So if you have 5 workers and the soft limit is 256MB you could
# end up with 5 workers each taking 256MB that's 1.25GB of RAM that could
# be taken up. If you only had 1GB of ram you may need to dial back your
# workers or your soft limit.
#
# It's a balancing act of sorts, I am also not sure if keeping the
# workers at say 350 or 400 if there is some caching effect. Not sure
# why it's holding on to the memory.
#
#-----------------------------------------------------------------------------
#
# Hardware Matrix for recommended values:
#   (Note these are for REAL hardware, Virtual Hardware has it's own
#     issues that can arise with too many guest on a host with too many
#     CPU cores etc, so remember that when looking at the chart below)
#   (One other note that when I tested these, I did use VMware but
#     no other VMs where competing for resources)
#   (One last note, really. These numbers are to show the relationship
#     between the config settings and hardware. We also assume you are running
#     the database server on the same server. I know at some point in the
#     higher numbers that this would not be the case. These are not numbers
#     set in stone nor numbers gotten from Odoo. These are numbers I have
#     come up with from the testing I have done. Real world examples if you
#     have them would be great and these numbers can and should be updated!
#
# Heading            | Description
# ------------------ | ---------------------------------------------------------
# CPUs               | Number of CPU Cores not threads
# Physical           | Physical memory, not virtual or swap
# workers            | Number of workers specified in config file (workers = x)
# cron               | Number of workers for cron jobs (max_cron_threads = xx)
# Mem Per            | Memory in MB that is the max memory for request per worker
# Max Mem            | Maximum amount that can be used by all workers
# limit_memory_soft  | Number in bytes that you will use for this setting
#
# Note: Max Memory if notice is less than total memory this is on purpose. As
#       workers process requests they can grow beyond the Mem Per limit so a
#       server under heavy load could go past this amount. This is why there
#       is "head room" built in.
#
# CPUs | Physical | workers | cron | Mem Per | Max Mem | limit_memory_soft
# ---- | -------- | ------- | ---- | ------- | ------- | -----------------------
# ANY  | =< 256MB |    NR   |  NR  |      NR |     NR  | NR
#  1   |   512MB  |    0    |  N/A |     N/A |     N/A | N/A
#  1   |   512MB  |    1    |  1   |   177MB |   354MB | 185127901
#  1   |    1GB   |    2    |  1   |   244MB |   732MB | 255652815
#  1   |    2GB   |    2    |  1   |   506MB |  1518MB | 530242876
#  2   |    1GB   |    3    |  1   |   183MB |   732MB | 191739611
#  2   |    2GB   |    5    |  2   |   217MB |  1519MB | 227246947
#  2   |    4GB   |    5    |  2   |   450MB |  3150MB | 471974428
#  4   |    2GB   |    5    |  2   |   217MB |  1519MB | 227246947
#  4   |    4GB   |    9    |  2   |   286MB |  3146MB | 300347363
#  4   |    8GB   |    9    |  3   |   546MB |  6552MB | 572662306
#  4   |    16GB  |    9    |  3   |  1187MB | 14244MB | 1244918057
#
#
#-----------------------------------------------------------------------------
#
# Calculations on how we got the above chart and other info can be found
#
# Memory Matrix Discussion
#   https://github.com/DocCyblade/tkl-odoo/issues/49
#
# Shakedown Testing Discussions
#   https://github.com/DocCyblade/tkl-odoo/issues/52
#   https://github.com/DocCyblade/tkl-odoo/issues/53
#   https://github.com/DocCyblade/tkl-odoo/issues/54
#   https://github.com/DocCyblade/tkl-odoo/issues/55
#
#-----------------------------------------------------------------------------




workers = 2

#-----------------------------------------------------------------------------
# number of workers dedicated to cron jobs. Defaults to 2. The workers are
# threads in multithreading mode and processes in multiprocessing mode.
#-----------------------------------------------------------------------------
max_cron_threads = 1

#-----------------------------------------------------------------------------
# Prevents the worker from using more than <limit> CPU seconds for each
# request. If the limit is exceeded, the worker is killed
#-----------------------------------------------------------------------------
limit_time_cpu = 60

#-----------------------------------------------------------------------------
# Prevents the worker from taking longer than <limit> seconds to process a
# request. If the limit is exceeded, the worker is killed.
#-----------------------------------------------------------------------------
limit_time_real = 170

#-----------------------------------------------------------------------------
# Maximum allowed virtual memory per worker. If the limit is exceeded, the
# worker is killed and recycled at the end of the current request.
#
# (See chart above for recommended values)
#-----------------------------------------------------------------------------
limit_memory_soft = 255652815


